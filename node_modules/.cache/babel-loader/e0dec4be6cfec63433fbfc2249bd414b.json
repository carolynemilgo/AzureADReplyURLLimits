{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\nimport { LogLevel } from \"@azure/msal-browser\";\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\n\nexport const msalConfig = {\n  auth: {\n    clientId: \"e138e8a9-8379-411c-8be9-45e2d4fa86c4\",\n    authority: \"https://login.microsoftonline.com/common/2fbf29c5-794a-4b5d-b159-b501f4ff41f6\",\n    redirectUri: \"http://localhost:3000/\"\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // This configures where your cache will be stored\n    storeAuthStateInCookie: false // Set this to \"true\" if you are having issues on IE11 or Edge\n\n  },\n  system: {\n    loggerOptions: {\n      loggerCallback: (level, message, containsPii) => {\n        if (containsPii) {\n          return;\n        }\n\n        switch (level) {\n          case LogLevel.Error:\n            console.error(message);\n            return;\n\n          case LogLevel.Info:\n            console.info(message);\n            return;\n\n          case LogLevel.Verbose:\n            console.debug(message);\n            return;\n\n          case LogLevel.Warning:\n            console.warn(message);\n            return;\n        }\n      }\n    }\n  }\n};\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\n\nexport const loginRequest = {\n  scopes: [\"User.Read\"]\n};\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\n\nexport const graphConfig = {\n  graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};","map":{"version":3,"sources":["/Users/carolynemilgo/Desktop/Azure-AD-main/src/authConfig.js"],"names":["LogLevel","msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","system","loggerOptions","loggerCallback","level","message","containsPii","Error","console","error","Info","info","Verbose","debug","Warning","warn","loginRequest","scopes","graphConfig","graphMeEndpoint"],"mappings":"AAAA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,qBAAzB;AAEA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE,sCADR;AAEFC,IAAAA,SAAS,EAAE,+EAFT;AAGFC,IAAAA,WAAW,EAAE;AAHX,GADgB;AAMtBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,aAAa,EAAE,gBADZ;AAC8B;AACjCC,IAAAA,sBAAsB,EAAE,KAFrB,CAE4B;;AAF5B,GANe;AAUtBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,aAAa,EAAE;AACXC,MAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,OAAR,EAAiBC,WAAjB,KAAiC;AAC7C,YAAIA,WAAJ,EAAiB;AACb;AACH;;AACD,gBAAQF,KAAR;AACI,eAAKZ,QAAQ,CAACe,KAAd;AACIC,YAAAA,OAAO,CAACC,KAAR,CAAcJ,OAAd;AACA;;AACJ,eAAKb,QAAQ,CAACkB,IAAd;AACIF,YAAAA,OAAO,CAACG,IAAR,CAAaN,OAAb;AACA;;AACJ,eAAKb,QAAQ,CAACoB,OAAd;AACIJ,YAAAA,OAAO,CAACK,KAAR,CAAcR,OAAd;AACA;;AACJ,eAAKb,QAAQ,CAACsB,OAAd;AACIN,YAAAA,OAAO,CAACO,IAAR,CAAaV,OAAb;AACA;AAZR;AAcH;AAnBU;AADX;AAVc,CAAnB;AAmCP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMW,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,CAAC,WAAD;AADgB,CAArB;AAIP;AACA;AACA;AACA;;AACA,OAAO,MAAMC,WAAW,GAAG;AACvBC,EAAAA,eAAe,EAAE;AADM,CAApB","sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LogLevel } from \"@azure/msal-browser\";\n\n/**\n * Configuration object to be passed to MSAL instance on creation. \n * For a full list of MSAL.js configuration parameters, visit:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/configuration.md \n */\nexport const msalConfig = {\n    auth: {\n        clientId: \"e138e8a9-8379-411c-8be9-45e2d4fa86c4\",\n        authority: \"https://login.microsoftonline.com/common/2fbf29c5-794a-4b5d-b159-b501f4ff41f6\",\n        redirectUri: \"http://localhost:3000/\"\n    },\n    cache: {\n        cacheLocation: \"sessionStorage\", // This configures where your cache will be stored\n        storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n    },\n    system: {\t\n        loggerOptions: {\t\n            loggerCallback: (level, message, containsPii) => {\t\n                if (containsPii) {\t\t\n                    return;\t\t\n                }\t\t\n                switch (level) {\t\t\n                    case LogLevel.Error:\t\t\n                        console.error(message);\t\t\n                        return;\t\t\n                    case LogLevel.Info:\t\t\n                        console.info(message);\t\t\n                        return;\t\t\n                    case LogLevel.Verbose:\t\t\n                        console.debug(message);\t\t\n                        return;\t\t\n                    case LogLevel.Warning:\t\t\n                        console.warn(message);\t\t\n                        return;\t\t\n                }\t\n            }\t\n        }\t\n    }\n};\n\n/**\n * Scopes you add here will be prompted for user consent during sign-in.\n * By default, MSAL.js will add OIDC scopes (openid, profile, email) to any login request.\n * For more information about OIDC scopes, visit: \n * https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\n */\nexport const loginRequest = {\n    scopes: [\"User.Read\"]\n};\n\n/**\n * Add here the scopes to request when obtaining an access token for MS Graph API. For more information, see:\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-browser/docs/resources-and-scopes.md\n */\nexport const graphConfig = {\n    graphMeEndpoint: \"https://graph.microsoft.com/v1.0/me\"\n};\n"]},"metadata":{},"sourceType":"module"}